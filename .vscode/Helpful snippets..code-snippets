{
	// Place your byzantine-opal workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Insert standard command": {
		"prefix": "&c.",
		"body": "&c.+${1:command_name} [v(d.$2c)]=$+${1:command_name}$3:$4; @trigger me/tr.success=%#, $5;\r\n",
		"description": "inserting a standard command body"
	},
	"Insert assert with error": {
		"prefix": "@ass",
		"body": "@assert $1={ @trigger me/tr.error=%#, $2; }; ",
		"description": "assert with an error message"
	},
	"Insert assert without error": {
		"prefix": "@ass",
		"body": "@assert $1; ",
		"description": "assert without an error message"
	},
	"Insert break with error": {
		"prefix": "@br",
		"body": "@break t($1)={ @trigger me/tr.error=%#, $2; }; ",
		"description": "break with an error message"
	},
	"Insert break without error": {
		"prefix": "@br",
		"body": "@break strmatch($1, $2); ",
		"description": "break without an error message"
	},
	"Insert standard error/alert/success triggers": {
		"prefix": "&tr.err",
		"body": "&tr.error [v(d.$1c)]=@pemit %0=strcat(alert(Error), %b, %1);\r\n\r\n&tr.message [v(d.$1c)]=@pemit %0=strcat(alert(Alert), %b, %1);\r\n\r\n&tr.success [v(d.$1c)]=@pemit %0=strcat(alert(Success), %b, %1);\r\n\r\n",
		"description": "assert with an error message"
	},
	"Insert standard function": {
		"prefix": "&f.",
		"body": "&f.$1 [v(d.$2f)]=${3:strcat($4)}\r\n"
	},
	"Insert layout function": {
		"prefix": "&la",
		"body": "&layout.$1 [v(d.$2f)]=strcat($3)\r\n"
	},
	"Insert standard data object": {
		"prefix": "&d.",
		"body": "&d.$1 [v(d.$2d)]=$3"
	},
	"Insert other attribute": {
		"prefix": "&",
		"body": "&$1 [v(d.$2f)]=$3\r\n"
	},
	"Test function": {
		"prefix": "th ",
		"body": "th ulocal(v(d.$1f)/$2, $3)"
	}
}